#!/usr/bin/env node

const exec = require('meta-exec');
const fs = require('fs');
const debug = require('debug')('meta-git-clone');
const getMetaFile = require('get-meta-file');
const path = require('path');
const program = require('commander');
const util = require('util');

if ( ! process.argv[2] || process.argv[2] === '--help')
  return console.log(`\n  usage:\n\n    meta git clone <metaRepoUrl>\n`);

const repoUrl = process.argv[2] === 'blank' ?
                      process.argv[3] :
                      process.argv[2];

const dirNameIndex=process.argv.indexOf('--dir');
const dirname =dirNameIndex!==0?process.argv[dirNameIndex+1]:path.basename(repoUrl).replace('.git', '');

const branchNameIndex=process.argv.indexOf('--branch');
const branch=branchNameIndex!==0?process.argv[branchNameIndex+1]:null;

console.log(`meta git cloning into \'${repoUrl}\' at ${dirname}`);
const mainCmd=branch===null?`git clone ${repoUrl} ${dirname}`: `git clone --single-branch -b ${branch} ${repoUrl} ${dirname}`;
exec({ cmd: mainCmd , displayDir: dirname}, (err, result) => {
  if (err) throw err;

  const newDir = path.resolve(dirname);

  debug(`chdir to ${newDir}`);
  
  process.chdir(newDir);

  const meta = getMetaFile();

  const projects = meta.projects;
  const folders = Object.keys(projects);

  var folder = null;

  function child (err) {
    if (err) throw err;
    
    if ( ! folders.length) return 0;

    folder = folders.pop()

    const gitUrl = projects[folder];
	const cmd=branch===null?`git clone ${gitUrl} ${folder}`: `git clone --single-branch -b ${branch} ${gitUrl} ${folder}`;

    exec({ cmd: cmd, displayDir: path.join(newDir, folder) },  (err) => {
      if (err) throw err;

      child();

    });

  }

  child();

});
